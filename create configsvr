# make the data directories
sudo mkdir -p /data/db/local_configsvr_replset/cfgsvr0-0 /data/db/local_configsvr_replset/cfgsvr0-1 /data/db/local_configsvr_replset/cfgsvr0-2

# change the ownership of the data directories
sudo chmod 777 -R /data/db/local_configsvr_replset/cfgsvr0-0 /data/db/local_configsvr_replset/cfgsvr0-1 /data/db/local_configsvr_replset/cfgsvr0-2

# make the log directories
sudo mkdir -p /data/db/local_configsvr_replset/cfgsvr0-0-logs /data/db/local_configsvr_replset/cfgsvr0-1-logs /data/db/local_configsvr_replset/cfgsvr0-2-logs

# change the ownership of the log directories
sudo chmod 777 -R /data/db/local_configsvr_replset/cfgsvr0-0-logs /data/db/local_configsvr_replset/cfgsvr0-1-logs /data/db/local_configsvr_replset/cfgsvr0-2-logs



# start the configsvrs
sudo mongod --configsvr --replSet configReplSet --port 31017 --dbpath /data/db/local_configsvr_replset/cfgsvr0-0 --logpath /data/db/local_configsvr_replset/cfgsvr0-0-logs/log0-0.log --fork
sudo mongod --configsvr --replSet configReplSet --port 31018 --dbpath /data/db/local_configsvr_replset/cfgsvr0-1 --logpath /data/db/local_configsvr_replset/cfgsvr0-1-logs/log0-1.log --fork
sudo mongod --configsvr --replSet configReplSet --port 31019 --dbpath /data/db/local_configsvr_replset/cfgsvr0-2 --logpath /data/db/local_configsvr_replset/cfgsvr0-2-logs/log0-2.log --fork

# connnect to the mongodb configsvr
mongo --port 31017

# initiate the configsvrs
rs.initiate( {
   _id: "configReplSet",
   configsvr: true,
   members: [
      { _id: 0, host: "Ubuntu_Test_Server:31017" },
      { _id: 1, host: "Ubuntu_Test_Server:31018" },
      { _id: 2, host: "Ubuntu_Test_Server:31019" }
   ]
} )

exit

# create and mod the mongos logs dir (no data dir needed)
sudo mkdir -p /data/db/mongos/mongos0-0-logs 
sudo chmod 777 -R /data/db/mongos/mongos0-0-logs

# start the mongos process
mongos --port 32017 --configdb configReplSet/Ubuntu_Test_Server:31017,Ubuntu_Test_Server:31018,Ubuntu_Test_Server:31019 --logpath /data/db/mongos/mongos0-0-logs/mongos.log --fork

#connect to the mongos
mongo --host Ubuntu_Test_Server --port 32017

# add the shard_replset to the shard
sh.addShard( "Chris_local_shard_replset/Ubuntu_Test_Server:33017" )

# check the status
sh.status()

exit

# connect to the shard_replset
mongo --port 33017

# create the sample data
# drop the collection if they already exist
use test
db.shard_test.drop()

# create the sample data & index
for (i = 0; i < 1000; i++) {db.shard_test.insert({counter:i, string:"this is a test_string", date:ISODate()});}

db.shard_test.createIndex({counter: 1,date:-1}, {background:true, unique:true})

exit

#connect to the mongos
mongo --host Ubuntu_Test_Server --port 32017

# enable sharding on the test database
sh.enableSharding("test")

sh.shardCollection("test.shard_test", { "counter": 1, "date": 1 } )

